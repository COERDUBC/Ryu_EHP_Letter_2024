}}
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
colnames(LODs)[2] <- "LLOD"
rownames(LODs) <- LODs$Target
LLOD <- LODs$LLOD[which(Target == `GM-CSF`)]
LLOD <- LODs[which(Target == `GM-CSF`)]
View(LODs)
View(Cytokines)
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = c(var_names)
)
df <- df %>% pivot_longer(
cols = var_names
)
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
View(df)
colnames(df)[4] <- "protein"
colnames(df)[4] <- "Target"
colnames(LODs)[1] <- "Target"
df <- merge(df, LODs)
View(df)
View(df)
df$value[which(df$value < df$LLOD)] = NA
colnames(df)[5] <- "concentration"
summarize(df)
table(df$concentration, df$Target)
df <- df[,-c("LLOD")]
df <- df %>% filter(LLOD)
df <- df %>% subset(!LLOD)
View(df)
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
colnames(df)[4] <- "Target"
colnames(LODs)[1] <- "Target"
df <- merge(df, LODs)
df$value[which(df$value < df$LLOD)] = NA
colnames(df)[5] <- "concentration"
df <- df %>% select(!LLOD)
View(df)
df <- df %>% pivot_wider()
df %>% pivot_wider(
names_from = Target,
values_from = concentration
)
df <- df %>% pivot_wider(
names_from = Target,
values_from = concentration
)
View(df)
View(df)
df %>%
summarise(across(everything(), ~ sum(is.na(.x))))
cytokine_NAs <- df %>%
summarise(across(everything(), ~ sum(is.na(.x))))
View(cytokine_NAs)
t(cytokine_NAs)
df %>% summarise()
cytokine_NAs <- df %>%
summarise(across(everything(), ~ sum(is.na(.x))))
View(cytokine_NAs)
# Summary function
summary_stats <- function(x) {
mean_value <- mean(x, na.rm = TRUE)
sd_value <- sd(x, na.rm = TRUE)
median_value <- median(x, na.rm = TRUE)
iqr_value <- IQR(x, na.rm = TRUE)
num_na <- sum(is.na(x))
return(c(mean = mean_value,
sd = sd_value,
median = median_value,
IQR = iqr_value,
num_NAs = num_na))
}
# Apply summary function to each column of the data frame
summary_df <- df %>%
summarise_all(.funs = summary_stats)
names(df)
# Apply summary function to each column of the data frame
summary_df <- df %>%
select(!c("EHP_sid", "Exposure", "Sample")) %>%
summarise_all(.funs = summary_stats)
View(summary_df)
# Apply summary function to each column of the data frame
summary_df <- df %>%
select(!c("EHP_sid", "Exposure", "Sample")) %>%
reframe_all(.funs = summary_stats)
# Apply summary function to each column of the data frame
summary_df <- df %>%
select(!c("EHP_sid", "Exposure", "Sample")) %>%
reframe(.funs = summary_stats)
View(df)
summary(df)
df <- df %>% select(!c(LLOD))
df <- df %>% select(!all_of(LLOD))
df <- df %>% select(!all_of(LLOD)
df <- df %>% select(!all_of(LLOD))
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
colnames(df)[4] <- "Target"
df <- merge(df, LODs)
df$value[which(df$value < df$LLOD)] = NA
colnames(df)[5] <- "concentration"
df <- df %>% select(!all_of(LLOD))
df <- df %>% select(!all_of("LLOD"))
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
colnames(df)[4] <- "Target"
df <- merge(df, LODs)
df$value[which(df$value < df$LLOD)] = NA
colnames(df)[5] <- "concentration"
df <- df %>% select(!all_of("LLOD"))
df <- df %>% pivot_wider(
names_from = Target,
values_from = concentration
)
summary(df)
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
colnames(df)[4] <- "Target"
df <- merge(df, LODs)
df$value[which(df$value < df$LLOD)] = NA
colnames(df)[5] <- "concentration"
View(df)
df <- df %>% select(!all_of("LLOD"))
View(LLOD)
View(df)
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = var_names
)
df <- df %>% pivot_longer(
cols = all_of(var_names)
)
# place NA into values that were converted to 1/2 LOD
df <- Cytokines
var_names <- colnames(df)[4:ncol(df)]
df <- df %>% pivot_longer(
cols = all_of(var_names)
)
colnames(df)[4] <- "Target"
df <- merge(df, LODs)
Spiro <- readRDS(paste0(data_path, "/COPA_EHP_Spiro_Public.rds"))
View(Spiro)
View(Spiro)
Spiro_baseline <- Spiro %>% subset(Time == "-4h")
Spiro_baseline <- Spiro %>% subset(Time == "-4h")
DT::datatable(Spiro_baseline)
data <- merge(Demographics, Spiro)
data <- merge(Demographics, Spiro)
View(Spiro)
data <- data %>% subset(Exposure == "FA")
myVars <- names(Spiro)[-(1:3)]
data <- data %>% subset(Exposure == "FA") %>% subset(Time == "-4h")
View(data)
myVars <- names(Spiro)[-(1:3)]
strata <- c("Group")
mb <- myVars
data <- merge(Demographics, Spiro)
data <- data %>% subset(Exposure == "FA") %>% subset(Time == "-4h")
myVars <- names(Spiro)[-(1:3)]
strata <- c("Group")
mb <- myVars
tb4 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_4 <- print(tb4, nonnormal = mb)
knitr::kable(table_4, format = "markdown", digits = 2)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "-4h")
myVars <- names(Spiro)[-(1:3)]
strata <- c("Group")
mb <- myVars
tb4 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_4 <- print(tb4, nonnormal = mb)
knitr::kable(table_4, format = "markdown", digits = 2)
data$group_exposure <- paste0(data$Group, data$Exposure)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "-4h")
myVars <- names(Spiro)[-(1:3)]
data$group_exposure <- paste0(data$Group, data$Exposure)
data$Group_Exposure <- paste0(data$Group, data$Exposure)
strata <- c("Group_Exposure")
mb <- myVars
tb4 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_4 <- print(tb4, nonnormal = mb)
knitr::kable(table_4, format = "markdown", digits = 2)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "-4h")
myVars <- names(Spiro)[-(1:3)]
data$Group_Exposure <- paste0(data$Group,"_", data$Exposure)
table(data$Group_Exposure)
data$Group_Exposure <- factor(data$Group_Exposure, levels = c("ES_FA","ES_DE","ES-COPD_FA","ES-COPD_DE","NS_FA","NS_DE"))
strata <- c("Group_Exposure")
mb <- myVars
tb4 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_4 <- print(tb4, nonnormal = mb)
knitr::kable(table_4, format = "markdown", digits = 2)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "0")
myVars <- names(Spiro)[-(1:3)]
data$Group_Exposure <- paste0(data$Group,"_", data$Exposure)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "0h")
myVars <- names(Spiro)[-(1:3)]
data$Group_Exposure <- paste0(data$Group,"_", data$Exposure)
data$Group_Exposure <- factor(data$Group_Exposure, levels = c("ES_FA","ES_DE","ES-COPD_FA","ES-COPD_DE","NS_FA","NS_DE"))
strata <- c("Group_Exposure")
mb <- myVars
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "0h")
myVars <- names(Spiro)[-(1:3)]
data$Group_Exposure <- paste0(data$Group,"_", data$Exposure)
data$Group_Exposure <- factor(data$Group_Exposure, levels = c("ES_FA","ES_DE","ES-COPD_FA","ES-COPD_DE","NS_FA","NS_DE"))
strata <- c("Group_Exposure")
mb <- myVars
tb5 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_5 <- print(tb5, nonnormal = mb)
knitr::kable(table_5, format = "markdown", digits = 2)
data <- merge(Demographics, Spiro)
data <- data %>% subset(Time == "24h")
myVars <- names(Spiro)[-(1:3)]
data$Group_Exposure <- paste0(data$Group,"_", data$Exposure)
data$Group_Exposure <- factor(data$Group_Exposure, levels = c("ES_FA","ES_DE","ES-COPD_FA","ES-COPD_DE","NS_FA","NS_DE"))
strata <- c("Group_Exposure")
mb <- myVars
tb6 <- CreateTableOne(data = data, vars = myVars, strata = strata, test = FALSE)
table_6 <- print(tb6, nonnormal = mb)
knitr::kable(table_6, format = "markdown", digits = 2)
knitr::opts_knit$set(root.dir = "..")
getwd()
#load libraries
library(here)
library(readxl)
library(writexl)
library(plyr)
library(tidyverse)
library(gmodels)
library(nlme)
library(rmcorr)
library(gtools)
library(DT)
library(tableone)
library(ggpubr)
# set date as an object
currentDate <- format(Sys.Date(), "%Y%m%d")
# set directories
path = here::here() #this should be the parent directory
data_path = here::here("data")
code_path = here::here("code")
result_path = here::here("results")
# make directory for results on currentDate
if(dir.exists(paste0(result_path,"/", currentDate, "/")) == TRUE){
print(paste0(result_path,"/", currentDate, "/"))
} else {
dir.create(paste0(result_path,"/", currentDate, "/"), recursive = TRUE)
}
result_save <- paste0(result_path,"/", currentDate, "/", currentDate, "_")
knitr::opts_knit$set(root.dir = "..")
getwd()
#load libraries
library(here)
library(readxl)
library(writexl)
library(plyr)
library(tidyverse)
library(gmodels)
library(nlme)
library(rmcorr)
library(gtools)
library(DT)
library(tableone)
library(ggpubr)
# set date as an object
currentDate <- format(Sys.Date(), "%Y%m%d")
# set directories
path = here::here() #this should be the parent directory
data_path = here::here("data")
code_path = here::here("code")
result_path = here::here("results")
# make directory for results on currentDate
if(dir.exists(paste0(result_path,"/", currentDate, "/")) == TRUE){
print(paste0(result_path,"/", currentDate, "/"))
} else {
dir.create(paste0(result_path,"/", currentDate, "/"), recursive = TRUE)
}
result_save <- paste0(result_path,"/", currentDate, "/", currentDate, "_")
Demographics <- readRDS(paste0(data_path, "/COPA_EHP_Demographics_Public.rds"))
Microbiome <- readRDS(paste0(data_path, "/COPA_EHP_Microbiome_Public.rds"))
colnames(Microbiome)[3] <- "ASV"
Cytokines <- readRDS(paste0(data_path, "/COPA_EHP_VPlex_BAL_Public.rds"))
LODs <- readRDS(paste0(data_path, "/COPA_EHP_VPlex_BAL_LODs_Public.rds"))
colnames(LODs) <- c("Target","LLOD")
Spiro <- readRDS(paste0(data_path, "/COPA_EHP_Spiro_Public.rds"))
# Write a function to calculate log fold change between FA and DE
FoldChangeFA = function(data){
arrange(data, ID, Visit, Exposure)
tempList = list()
for (i in 1:length(data$ID)){
if (data$Exposure[i] != c("FA")){
newRow = data[i, ]
FA = data[which(data$ID == newRow$ID), ]
FA = FA[which(FA$Exposure == c("FA")), ]
for(k in 1:nrow(newRow)){
for (j in 8:ncol(newRow)){
newRow[k,j] = ((foldchange(newRow[k,j],FA[k,j])))
tempList[[i]] = newRow
}}}
if (data$Exposure[i] == c("FA")){
tempList[[i]] = NA
}}
rm(FA, newRow)
newDataFrame = do.call(rbind.data.frame, tempList)
return(newDataFrame)
}
View(Cytokines)
# Write a function to calculate log fold change between FA and DE
FoldChangeFA = function(data){
arrange(data, ID, Visit, Exposure)
tempList = list()
for (i in 1:length(data$ID)){
if (data$Exposure[i] != c("FA")){
newRow = data[i, ]
FA = data[which(data$ID == newRow$ID), ]
FA = FA[which(FA$Exposure == c("FA")), ]
for(k in 1:nrow(newRow)){
for (j in 4:ncol(newRow)){
newRow[k,j] = ((foldchange(newRow[k,j],FA[k,j])))
tempList[[i]] = newRow
}}}
if (data$Exposure[i] == c("FA")){
tempList[[i]] = NA
}}
rm(FA, newRow)
newDataFrame = do.call(rbind.data.frame, tempList)
return(newDataFrame)
}
VPlex_BAL_foldchange <- FoldChangeFA(Cytokines[,c(1:17)])
Cytokines[,c(1:17)]
# Write a function to calculate log fold change between FA and DE
FoldChangeFA = function(data){
arrange(data, EHP_sid, Exposure)
tempList = list()
for (i in 1:length(data$ID)){
if (data$Exposure[i] != c("FA")){
newRow = data[i, ]
FA = data[which(data$ID == newRow$ID), ]
FA = FA[which(FA$Exposure == c("FA")), ]
for(k in 1:nrow(newRow)){
for (j in 4:ncol(newRow)){
newRow[k,j] = ((foldchange(newRow[k,j],FA[k,j])))
tempList[[i]] = newRow
}}}
if (data$Exposure[i] == c("FA")){
tempList[[i]] = NA
}}
rm(FA, newRow)
newDataFrame = do.call(rbind.data.frame, tempList)
return(newDataFrame)
}
VPlex_BAL_foldchange <- FoldChangeFA(Cytokines[,c(1:17)])
Cytokines$Exposure <- as.character(Cytokines$Exposure)
VPlex_BAL_foldchange <- FoldChangeFA(Cytokines[,c(1:17)])
View(Cytokines)
# Write a function to calculate log fold change between FA and DE
FoldChangeFA = function(data){
arrange(data, EHP_sid, Exposure)
tempList = list()
for (i in 1:length(data$EHP_sid)){
if (data$Exposure[i] != c("FA")){
newRow = data[i, ]
FA = data[which(data$EHP_sid == newRow$EHP_sid), ]
FA = FA[which(FA$Exposure == c("FA")), ]
for(k in 1:nrow(newRow)){
for (j in 4:ncol(newRow)){
newRow[k,j] = ((foldchange(newRow[k,j],FA[k,j])))
tempList[[i]] = newRow
}}}
if (data$Exposure[i] == c("FA")){
tempList[[i]] = NA
}}
rm(FA, newRow)
newDataFrame = do.call(rbind.data.frame, tempList)
return(newDataFrame)
}
Cytokines$Exposure <- as.character(Cytokines$Exposure)
View(Cytokines)
VPlex_BAL_foldchange <- FoldChangeFA(Cytokines[,c(1:17)])
View(VPlex_BAL_foldchange)
VPlex_BAL_foldchange = VPlex_BAL_foldchange[-which(is.na(VPlex_BAL_foldchange)), ]
VPlex_BAL_foldchange <- merge(Microbiome, VPlex_BAL_foldchange)
View(VPlex_BAL_foldchange)
VPlex_BAL_foldchange <- merge(Demographics, VPlex_BAL_foldchange)
View(VPlex_BAL_foldchange)
write_xlsx(VPlex_BAL_foldchange, path = paste0(result_save, "COPA Microbiome Vplex BAL (fold change) data.xlsx"), col_names = TRUE,
format_headers = TRUE)
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","observed_otus","IL-6","IL-7","IL-15")]
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
names(figure_df)
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "FoldChange",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("All participants")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("All participants")
figure_df_pivot$group <- factor(figure_df_pivot$group)
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
table(figure_df_pivot$group)
plot1 <- ggplot(figure_df_pivot, aes(x=ASV, y=FoldChange)) + geom_point() + geom_smooth(method='lm') + facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab("Fold change in concentration (DE-FA)") + xlab("ASV")
plot1
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
names(figure_df)
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "FoldChange",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("All participants")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("All participants")
figure_df_pivot$group <- factor(figure_df_pivot$group)
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
table(figure_df_pivot$group)
plot1 <- ggplot(figure_df_pivot, aes(x=ASV, y=FoldChange)) + geom_point() + geom_smooth(method='lm') + facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab("Fold change in concentration (DE-FA)") + xlab("ASV")
plot1
Microbiome_VPlexBAL <- merge(Cytokines, Microbiome, by = c("EHP_sid"))
figure_df <- Microbiome_VPlexBAL[,c("EHP_sid","Exposure","observed_otus","IL-6","IL-7","IL-15")]
Microbiome_VPlexBAL <- merge(Cytokines, Microbiome, by = c("EHP_sid"))
figure_df <- Microbiome_VPlexBAL[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
names(figure_df)
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "Concentration",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("High ASV")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("Low ASV")
figure_df_pivot$group <- factor(figure_df_pivot$group, levels = c("Low ASV","High ASV"))
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
table(figure_df_pivot$group)
plot2 <- ggplot(figure_df_pivot, aes(x=Exposure, y=log10(Concentration))) + geom_point()+ geom_line(aes(group=EHP_sid)) +facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab(expression(Log[10]~ concentration (pg/mL)))
plot2
f_labels <- data.frame(group = c("Low ASV","High ASV"), Cytokine = c("IL-6", "IL-7", "IL-15"), label = c("p=0.05", "p=0.20", "p=0.03", "p=0.09","p=0.03","p=0.16"))
f_labels$group <- factor(f_labels$group, levels = c("Low ASV","High ASV"))
f_labels$Cytokine <- factor(f_labels$Cytokine, levels = c("IL-6", "IL-7", "IL-15"))
plot2_anotated <- plot2 +  geom_text(x = 2.3, y = 1, aes(label = label), data = f_labels)
plot2_anotated
Combined_plot <- ggarrange(plot1, plot2_anotated, labels = c("A","B"),
font.label = list(size = 25, color = "black", face = "bold", family = NULL),
ncol = 2, nrow = 1, align = c("h"))
Combined_plot
table(figure_df_pivot$group)
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "FoldChange",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("All participants")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("All participants")
figure_df_pivot$group <- factor(figure_df_pivot$group)
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
table(figure_df_pivot$group)
plot1 <- ggplot(figure_df_pivot, aes(x=ASV, y=FoldChange)) + geom_point() + geom_smooth(method='lm') + facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab("Fold change in concentration (DE-FA)") + xlab("ASV")
plot1
table(figure_df_pivot$group)
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "FoldChange",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("All participants")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("All participants")
figure_df_pivot$group <- factor(figure_df_pivot$group)
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
plot1 <- ggplot(figure_df_pivot, aes(x=ASV, y=FoldChange)) + geom_point() + geom_smooth(method='lm') + facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab("Fold change in concentration (DE-FA)") + xlab("ASV")
plot1
figure_df <- VPlex_BAL_foldchange[,c("EHP_sid","Exposure","ASV","IL-6","IL-7","IL-15")]
figure_df_pivot <- figure_df %>% pivot_longer(cols = c("IL-6","IL-7","IL-15"),
names_to = "Cytokine",
values_to = "FoldChange",
values_drop_na = TRUE)
figure_df_pivot$group <- as.numeric(figure_df_pivot$ASV)
figure_df_pivot$group[which(figure_df_pivot$group >= 79.1)] = c("All participants")
figure_df_pivot$group[which(figure_df_pivot$group < 79.1)] = c("All participants")
figure_df_pivot$group <- factor(figure_df_pivot$group)
figure_df_pivot$Cytokine <- factor(figure_df_pivot$Cytokine, levels =c("IL-6","IL-7","IL-15"))
plot1 <- ggplot(figure_df_pivot, aes(x=ASV, y=FoldChange)) + geom_point() + geom_smooth(method='lm') + facet_grid(Cytokine ~ group) + theme_light(base_size = 25) + ylab("Fold change in concentration (DE-FA)") + xlab("ASV")
plot1
